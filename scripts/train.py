#!/usr/bin/env python3
import os
import argparse

try:
    from ultralytics import YOLO
except ImportError:
    print("Error: ultralytics library not found.")
    print("Please install it: pip install ultralytics")
    exit(1)


def train_yolo(data_yaml, model_name='yolov8n.pt', epochs=50, imgsz=640, batch=16, name='form_detector_run'):
    """Trains a YOLOv8 model using the provided dataset configuration."""

    print("--- Starting YOLOv8 Training ---")
    print(f"Dataset YAML: {data_yaml}")
    print(f"Model: {model_name}")
    print(f"Epochs: {epochs}")
    print(f"Image Size: {imgsz}")
    print(f"Batch Size: {batch}")
    print(f"Run Name: {name}")

    if not os.path.exists(data_yaml):
        print(f"Error: Dataset configuration file not found at {data_yaml}")
        print("Please ensure scripts/assemble_yolo.py has been run successfully.")
        return

    # Load a pretrained model (or create a new one)
    # Models: yolov8n.pt, yolov8s.pt, yolov8m.pt, yolov8l.pt, yolov8x.pt
    # See https://docs.ultralytics.com/models/yolov8/
    model = YOLO(model_name)

    # Train the model
    try:
        results = model.train(
            data=data_yaml,
            epochs=epochs,
            imgsz=imgsz,
            batch=batch,
            name=name,
            project='./runs',
            device="0",  # Uncomment to force GPU usage if available
            # workers=4, # Adjust based on your CPU cores for data loading
            # patience=10, # Early stopping patience
            # Other hyperparameters: https://docs.ultralytics.com/modes/train/#arguments
        )
        print("--- Training Finished ---")
        print(f"Results saved to: {results.save_dir}")
        print(f"Best model saved at: {results.best}")

    except Exception as e:
        print(f"An error occurred during training: {e}")


if __name__ == "__main__":
    # Default path to the dataset yaml generated by assemble_yolo.py
    DEFAULT_YAML_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '../data/yolo/dataset.yaml'))

    parser = argparse.ArgumentParser(description="Train a YOLOv8 model on the form dataset.")
    parser.add_argument("--data", type=str, default=DEFAULT_YAML_PATH, help="Path to the dataset.yaml file.")
    parser.add_argument("--model", type=str, default="yolov8l.pt", help="YOLOv8 model name (e.g., yolov8n.pt, yolov8s.pt).")
    parser.add_argument("--epochs", type=int, default=20, help="Number of training epochs.")
    parser.add_argument("--imgsz", type=int, default=640, help="Input image size.")
    parser.add_argument("--batch", type=int, default=16, help="Batch size (-1 for auto-batch).")
    parser.add_argument("--name", type=str, default="form_detector_run", help="Name for the training run (results saved to runs/detect/<name>).")

    args = parser.parse_args()

    train_yolo(
        data_yaml=args.data,
        model_name=args.model,
        epochs=args.epochs,
        imgsz=args.imgsz,
        batch=args.batch,
        name=args.name
    ) 
